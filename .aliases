# TODO: Refactor these into my fork of oh-my-zsh
# [https://github.com/neiljdo/oh-my-zsh]

# Dir navigation
# alias lll='tree --dirsfirst -ChFupDaLg 1'

# Utilities
alias c="pygmentize -O style=monokai -f console256 -g"
alias d="du -h -d=1"
alias df="df -h"
alias g="git"
alias grep='GREP_COLOR="1;37;45" LANG=C grep --color=auto'
alias h='history'
alias ifc='ifconfig'
alias s="ssh"
alias sz='source ~/.zshrc'
alias uu='sudo apt-get update && sudo apt-get upgrade'
alias zs='sz'

# virtualenv aliases
# http://blog.doughellmann.com/2010/01/virtualenvwrapper-tips-and-tricks.html
alias v='workon'
alias v.deactivate='deactivate'
alias v.mk='mkvirtualenv --no-site-packages'
alias v.mk_withsitepackages='mkvirtualenv'
alias v.rm='rmvirtualenv'
alias v.switch='workon'
alias v.add2virtualenv='add2virtualenv'
alias v.cdsitepackages='cdsitepackages'
alias v.cd='cdvirtualenv'
alias v.lssitepackages='lssitepackages'

# a few more git shortcuts
alias -g _gco='git checkout'
alias -g _gm='git merge'
alias gcm='_gco main'
alias gcmm='_gco master'
alias gco='_gco'
alias gcob='_gco -b'
alias gcd='_gco develop'
alias gch='_gco hotfixes || _gco hotfix'
alias gct='_gco testsite || _gco test || _gco staging'
alias gclo='git clone'
alias gf='git fetch'
alias gl.h='git pull gh'
alias gl.n='git pull neiljdo'
alias gl.u='git pull upstream'
alias gp.h='git push gh'
alias gp.n='git push neiljdo'
alias gp.u='git push upstream'
alias gplo='git pull origin'
alias gplom='gplo master'
alias gm='_gm'
alias gmd='_gm develop'
alias gmh='_gm hotfixes || _gm hotfix'
alias gmm='_gm master'
alias grm='git rm'
alias grmc='git rm --cached'

# conda aliases
alias -g _cna='conda activate'
alias -g _cnd='conda deactivate'
alias cn.d='_cnd'
alias cn.a='_cna'
alias cn.r='_cnd && _cna'

# pip aliases
alias pf='pip freeze'
alias pi='pip install'
alias pinw='pip install --no-use-wheel'
alias pir='pip install -r'
alias pinwr='pip install --no-use-wheel -r'
alias pun='pip uninstall'
alias punr='pip uninstall -r'


function get_settings {
    # Check if this is a Git repo
    PROJECT_ROOT=`git rev-parse --show-toplevel 2> /dev/null`
    if (( $? != 0 )); then
        PROJECT_ROOT="."
    fi

    # If we have manage.py in the directory, we are in a django
    # project. We now look for a .settings override
    if [[ -f "$PWD/.settings" && $PWD = $PROJECT_ROOT/* ]]; then
        DJANGO_SETTINGS_MODULE_DEV=`cat "$PWD/.settings"`
        DJANGO_SETTINGS_MODULE_TEST=`cat "$PWD/.test_settings"`
    elif [[ -f "$PROJECT_ROOT/manage.py" ]]; then
        if [[ -f "$PROJECT_ROOT/.settings" ]]; then
            DJANGO_SETTINGS_MODULE_DEV=`cat $PROJECT_ROOT/.settings`
            DJANGO_SETTINGS_MODULE_TEST=`cat "$PWD/.test_settings"`
        fi
    else
        unset DJANGO_SETTINGS_MODULE_DEV
        unset DJANGO_SETTINGS_MODULE_TEST
    fi
}

# Append workon_cwd to the chpwd_functions array, so it will be called on cd
# http://zsh.sourceforge.net/Doc/Release/Functions.html
# TODO: replace with 'add-zsh-hook chpwd workon_cwd' when oh-my-zsh min version is raised above 4.3.4
if (( ${+chpwd_functions} )); then
    if (( $chpwd_functions[(I)get_settings] == 0 )); then
        set -A chpwd_functions $chpwd_functions get_settings
    fi
else
    set -A chpwd_functions get_settings
fi

# django aliases
alias pm='python $PWD/manage.py'
alias -g _ds='--settings=$DJANGO_SETTINGS_MODULE_DEV'
alias -g _ts='--settings=$DJANGO_SETTINGS_MODULE_TEST'
alias pmsa='pm startapp _ds'
alias pmcsu='pm createsuperuser _ds'
alias pmsl='pm shell _ds'
alias pmsp='pm shell_plus _ds'
alias pms='pmsp || pmsl'
alias pmds='pm dbshell _ds'
alias pmy='pm syncdb _ds'
alias pmdd='pm dumpdata _ds'
alias pmld='pm loaddata _ds'
alias -g pmrr='pm runserver _ds'
alias pmr='pmrr 0.0.0.0:8000'
alias pmcs='pm collectstatic --noinput _ds'
alias -g mt='$PWD/manage.py test _ts --verbosity=2'
alias -g mtff='mt --failfast'
alias pmt='python mt'
alias pmcsu='pm createsuperuser _ds'
alias pmcc='pm clear_cache'

# django 1.8+ aliases
alias pmmm='pm makemigrations _ds'

# django-coverage
alias -g mtc='$PWD/manage.py test_coverage --settings=$DJANGO_SETTINGS_MODULE_TEST'
alias pmtc='python mtc'

# django-south
alias -g pmm='pm migrate _ds'
alias pmml='pmm --list'
alias pmmf='pmm --fake'
alias pmsci='pm schemamigration --initial _ds'
alias pmsca='pm schemamigration --auto _ds'
alias pmscau='pm schemamigration --auto --update _ds'
alias pmdm='pm datamigration _ds'

# django-celery
alias pmcl='pm celery worker --loglevel=debug _ds'

# django-bower
alias pmbi='pm bower_install _ds'

# fabric
alias fabi='fab -s "/bin/bash -ic"'
alias fabil='fab -s "/bin/bash -ilc"'
alias fabl='fab -s "/bin/bash -lc"'
#alias fab='fabi'

# coverage
alias -g cr='coverage run'
alias -g ce='coverage erase'
alias -g ch='coverage html'
alias crmt='ce && cr mt'
alias crmtff='ce && cr mtff'

# youtube-dl
alias -g yt.dlb='youtube-dl -f "bestvideo+bestaudio"'
alias yt.dlbnp='yt.dlb --no-playlist'

# Neovim
alias vim=nvim
alias vi=nvim
alias vx=/usr/local/bin/vim

# SSH
alias ssh='TERM=xterm-256color ssh'

alias b='bat'
